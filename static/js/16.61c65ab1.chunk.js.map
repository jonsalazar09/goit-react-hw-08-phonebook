{"version":3,"file":"static/js/16.61c65ab1.chunk.js","mappings":"2LAEMA,E,QAAMC,GAAAA,OAAH,ggB,SCUT,EARe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OAAO,SAACF,EAAD,CAAKG,KAAK,SAAV,SAAoBD,GAC5B,C,+ICHKE,EAAOH,EAAAA,GAAAA,KAAH,6FAMJI,EAAQJ,EAAAA,GAAAA,MAAH,qLAYLK,EAAQL,EAAAA,GAAAA,MAAH,qJAUXM,EAAAA,OAAAA,KAAY,CACVC,gBAAiB,UACjBC,cAAe,OACfC,gBAAiB,OACjBC,KAAM,CACJC,SAAU,UACVC,WAAY,UACZC,aAAc,UACdC,iBAAkB,UAClBC,YAAa,UACbC,iBAAkB,4B,8CCjBtB,IAhBgB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,WACGD,IAAS,SAAC,KAAD,UAAQA,IACjBC,MAIR,C,yLCfKC,EAAiBnB,EAAAA,GAAAA,QAAH,4CAIdoB,EAAYpB,EAAAA,GAAAA,IAAH,wUAeTqB,EAAQrB,EAAAA,GAAAA,GAAH,0KAULsB,EAAOtB,EAAAA,GAAAA,GAAH,+LAWJuB,EAAOvB,EAAAA,GAAAA,EAAH,+I,yMCHV,EAhCkB,WAChB,IAAMwB,GAAWC,EAAAA,EAAAA,MAcjB,OACE,SAACC,EAAA,EAAD,WACE,UAAC,KAAD,CAAMC,SAdW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBP,GACEQ,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAIiCC,aAAa,MAA3C,WACE,UAAC,KAAD,WAAO,SAEL,SAAC,KAAD,CAAOpC,KAAK,QAAQqC,KAAK,cAE3B,UAAC,KAAD,WAAO,YAEL,SAAC,KAAD,CAAOrC,KAAK,WAAWqC,KAAK,iBAE9B,SAACC,EAAA,EAAD,CAAQvC,KAAK,eAIpB,EC/BD,EAJc,WACZ,OAAO,SAAC,EAAD,GACR,C","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/Section/Section.jsx","components/Section/Section.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Btn = styled.button`\n  width: 80%;\n  padding: 4px 0;\n  border-radius: 18px;\n\n  border: 2px solid #e5eaf1;\n  cursor: pointer;\n\n  background-color: #f3f6f9;\n  text-transform: capitalize;\n  font-size: 20px;\n  color: #516174;\n\n  transition: all var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus {\n    color: #112236;\n    filter: brightness(0.95);\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport { Btn };\n","import PropTypes from 'prop-types';\n\nimport { Btn } from 'components/Button/Button.styled';\n\nconst Button = ({ text }) => {\n  return <Btn type=\"submit\">{text}</Btn>;\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  width: 80%;\n  margin: 0 auto;\n  margin-bottom: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  font-size: 20px;\n  color: #516174;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n\n  font-size: 20px;\n  color: #112236 !important;\n`;\n\nReport.init({\n  backgroundColor: '#e5eaf1',\n  titleFontSize: '24px',\n  messageFontSize: '18px',\n  info: {\n    svgColor: '#112236',\n    titleColor: '#112236',\n    messageColor: '#112236',\n    buttonBackground: '#516174',\n    buttonColor: '#112236',\n    backOverlayColor: 'rgb(118, 134, 150, 0.8)',\n  },\n});\n\nexport { Form, Label, Input };\n","import PropTypes from 'prop-types';\n\nimport {\n  SectionWrapper,\n  Container,\n  Title,\n} from 'components/Section/Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </SectionWrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nconst SectionWrapper = styled.section`\n  padding: 20px 0;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 480px;\n  margin: 0 auto;\n  padding: 32px 16px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n  overflow: hidden;\n\n  background-color: #f3f6f9;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n\n  color: #112236;\n  text-align: center;\n  font-size: 28px;\n  line-height: calc(36 / 32);\n  letter-spacing: 0.02em;\n`;\n\nconst Name = styled.h2`\n  margin-bottom: 24px;\n\n  color: #112236;\n  text-align: center;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: calc(28 / 24);\n  letter-spacing: 0.02em;\n`;\n\nconst Text = styled.p`\n  color: #516174;\n  text-align: center;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  letter-spacing: 0.02em;\n`;\n\nexport { SectionWrapper, Container, Title, Name, Text };\n","import { useDispatch } from 'react-redux';\n\nimport { logIn } from 'redux/auth/operations';\nimport Section from 'components/Section';\nimport Button from 'components/Button';\nimport { Form, Input, Label } from 'components/ContactForm/ContactForm.styled';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Section>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          Email\n          <Input type=\"email\" name=\"email\" />\n        </Label>\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" />\n        </Label>\n        <Button text=\"Log In\" />\n      </Form>\n    </Section>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["Btn","styled","text","type","Form","Label","Input","Report","backgroundColor","titleFontSize","messageFontSize","info","svgColor","titleColor","messageColor","buttonBackground","buttonColor","backOverlayColor","title","children","SectionWrapper","Container","Title","Name","Text","dispatch","useDispatch","Section","onSubmit","event","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","name","Button"],"sourceRoot":""}