{"version":3,"file":"static/js/572.73b2a4cc.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/Section/Section.jsx","components/Section/Section.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchFilter/SearchFilter.jsx","components/ListElement/ListElement.styled.jsx","components/ListElement/ListElement.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Btn = styled.button`\n  width: 80%;\n  padding: 4px 0;\n  border-radius: 18px;\n\n  border: 2px solid #e5eaf1;\n  cursor: pointer;\n\n  background-color: #f3f6f9;\n  text-transform: capitalize;\n  font-size: 20px;\n  color: #516174;\n\n  transition: all var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus {\n    color: #112236;\n    filter: brightness(0.95);\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport { Btn };\n","import PropTypes from 'prop-types';\n\nimport { Btn } from 'components/Button/Button.styled';\n\nconst Button = ({ text }) => {\n  return <Btn type=\"submit\">{text}</Btn>;\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  width: 80%;\n  margin: 0 auto;\n  margin-bottom: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  font-size: 20px;\n  color: #516174;\n`;\n\nconst Input = styled.input`\n  padding: 10px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n\n  font-size: 20px;\n  color: #112236 !important;\n`;\n\nReport.init({\n  backgroundColor: '#e5eaf1',\n  titleFontSize: '24px',\n  messageFontSize: '18px',\n  info: {\n    svgColor: '#112236',\n    titleColor: '#112236',\n    messageColor: '#112236',\n    buttonBackground: '#516174',\n    buttonColor: '#112236',\n    backOverlayColor: 'rgb(118, 134, 150, 0.8)',\n  },\n});\n\nexport { Form, Label, Input };\n","import PropTypes from 'prop-types';\n\nimport {\n  SectionWrapper,\n  Container,\n  Title,\n} from 'components/Section/Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <Container>\n        {title && <Title>{title}</Title>}\n        {children}\n      </Container>\n    </SectionWrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nconst SectionWrapper = styled.section`\n  padding: 20px 0;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 480px;\n  margin: 0 auto;\n  padding: 32px 16px;\n\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n  overflow: hidden;\n\n  background-color: #f3f6f9;\n  box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n\n  color: #112236;\n  text-align: center;\n  font-size: 28px;\n  line-height: calc(36 / 32);\n  letter-spacing: 0.02em;\n`;\n\nconst Name = styled.h2`\n  margin-bottom: 24px;\n\n  color: #112236;\n  text-align: center;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: calc(28 / 24);\n  letter-spacing: 0.02em;\n`;\n\nconst Text = styled.p`\n  color: #516174;\n  text-align: center;\n  font-size: 20px;\n  line-height: calc(24 / 20);\n  letter-spacing: 0.02em;\n`;\n\nexport { SectionWrapper, Container, Title, Name, Text };\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filterContent;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport Button from 'components/Button';\nimport { Form, Label, Input } from 'components/ContactForm/ContactForm.styled';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const { name, number } = form.elements;\n    const newContact = { name: name.value, number: number.value };\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.value.toLowerCase()\n      )\n    ) {\n      Report.info('SORRY', `${name.value} is already in contacts.`, 'Ok');\n    } else {\n      dispatch(addContact(newContact));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button text=\"Add contact\" />\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nconst LoaderWrap = styled.div`\n  position: fixed;\n  top: calc(50% - 48px);\n  left: calc(50% - 48px);\n  z-index: 1100;\n`;\n\nexport { LoaderWrap };\n","import { RotatingLines } from 'react-loader-spinner';\n\nimport { LoaderWrap } from 'components/Loader/Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </LoaderWrap>\n  );\n};\n\nexport default Loader;\n","import { useDispatch } from 'react-redux';\n\nimport { selectFilter } from 'redux/contacts/filterSlice';\nimport { Label, Input } from 'components/ContactForm/ContactForm.styled';\n\nconst SearchFilter = () => {\n  const dispatch = useDispatch();\n\n  const search = evt => {\n    dispatch(selectFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" name=\"name\" onChange={search} />\n    </Label>\n  );\n};\n\nexport default SearchFilter;\n","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n  font-size: 18px;\n  color: #112236;\n`;\n\nconst Span = styled.span`\n  margin-left: 10px;\n`;\n\nconst Btn = styled.button`\n  width: 20%;\n  min-width: 56px;\n  height: 30px;\n  padding: 0;\n  border-radius: 15px;\n\n  border: 2px solid #e5eaf1;\n  cursor: pointer;\n\n  background-color: #f3f6f9;\n  text-transform: capitalize;\n  font-size: 16px;\n  color: #516174;\n\n  transition: all var(--animation-duration) var(--timing-function);\n\n  &:hover,\n  &:focus {\n    color: #112236;\n    filter: brightness(0.95);\n    box-shadow: 4px 1px 4px rgba(0, 0, 0, 0.12), 0 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport { Paragraph, Span, Btn };\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport {\n  Paragraph,\n  Span,\n  Btn,\n} from 'components/ListElement/ListElement.styled';\n\nconst ListElement = ({ element: { id, name, number } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Paragraph>\n        {name}:<Span>{number}</Span>\n      </Paragraph>\n      <Btn onClick={() => dispatch(deleteContact(id))}>Delete</Btn>\n    </>\n  );\n};\n\nListElement.propTypes = {\n  element: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ListElement;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n\n  padding: 8px 12px;\n  border: 1px solid #e5eaf1;\n  border-radius: 8px;\n  background-color: #fff;\n`;\n\nexport { List, ListItem };\n","import { useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport ListElement from 'components/ListElement';\nimport { List, ListItem } from 'components/ContactList/ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n\n  const normalisedFilter = filter.toLowerCase();\n\n  const searchedContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalisedFilter)\n  );\n\n  return (\n    <List>\n      {searchedContacts\n        .sort((elementA, elementB) =>\n          elementA.name.localeCompare(elementB.name)\n        )\n        .map(element => (\n          <ListItem key={element.id}>\n            <ListElement element={element} />\n          </ListItem>\n        ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n  padding: 0 45px 10px;\n\n  font-style: italic;\n  font-size: 18px;\n  color: #516174;\n`;\n\nexport { Paragraph };\n","import PropTypes from 'prop-types';\nimport { Paragraph } from 'components/Notification/Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Paragraph>{message}</Paragraph>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm';\nimport Loader from 'components/Loader';\nimport SearchFilter from 'components/SearchFilter';\nimport ContactList from 'components/ContactList';\nimport Notification from 'components/Notification';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {isLoading && !error && <Loader />}\n        {contacts.length ? (\n          <>\n            <SearchFilter />\n            <ContactList />\n          </>\n        ) : (\n          <Notification message=\"There are no contacts in the phone book\" />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Btn","styled","text","type","Form","Label","Input","Report","backgroundColor","titleFontSize","messageFontSize","info","svgColor","titleColor","messageColor","buttonBackground","buttonColor","backOverlayColor","title","children","SectionWrapper","Container","Title","Name","Text","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","filterContent","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","elements","name","number","newContact","value","some","contact","toLowerCase","addContact","reset","pattern","required","Button","LoaderWrap","strokeColor","strokeWidth","animationDuration","width","visible","onChange","evt","trim","Paragraph","Span","element","id","onClick","deleteContact","List","ListItem","normalisedFilter","searchedContacts","includes","sort","elementA","elementB","localeCompare","map","message","useEffect","fetchContacts","Section","length"],"sourceRoot":""}